import{z as d,aW as y,F as S,aE as w,aA as M,bF as N,g1 as T,g2 as h,s as D}from"./index-a6c97245.js";import E from"./Mesh-789ba28e.js";import{m as F}from"./MeshGeoreferencedRelativeVertexSpace-d7e61dbc.js";import{m as I}from"./MeshLocalVertexSpace-074ee7fb.js";import{N as P}from"./MeshTransform-95c79502.js";import{i as O,a as x}from"./External-15d5178e.js";import"./MeshComponent-7c12c075.js";import"./imageUtils-c2d0d1ae.js";import"./triangulationUtils-4a253704.js";import"./earcut-15ea0d28.js";import"./DoubleArray-96e88651.js";import"./Indices-b766e722.js";import"./deduplicate-058a0b05.js";import"./georeference-5800a154.js";import"./mat3f64-221ce671.js";import"./mat4f64-65d35099.js";import"./spatialReferenceEllipsoidUtils-e0e52451.js";import"./vec32-8d32ec1b.js";import"./projection-81bc5b8c.js";import"./BufferView-c58f8e7f.js";import"./quat-7c737b79.js";import"./quatf64-3363c48e.js";const g=()=>D.getLogger("esri.rest.support.meshFeatureSet");function at(t,e,r){const n=r.features;r.features=[],delete r.geometryType;const o=d.fromJSON(r);if(o.geometryType="mesh",!r.assetMaps)return o;const s=v(e,r.assetMaps),a=t.sourceSpatialReference??y.WGS84,f=r.globalIdFieldName,{outFields:i}=t,c=i!=null&&i.length>0?A(i.includes("*")?null:new Set(i)):()=>({});for(const m of n){const u=L(m,f,a,e,s);u!=null&&o.features.push(new S({geometry:u,attributes:c(m)}))}return o}function A(t){return({attributes:e})=>{if(!e)return{};if(!t)return e;for(const r in e)t.has(r)||delete e[r];return e}}function L(t,e,r,n,o){const s=t.attributes[e],a=o.get(s);if(a==null)return g().error("mesh-feature-set:asset-not-found","Service returned a feature which was not found in the asset map",t),null;if(!t.geometry)return g().error("mesh-feature-set:no-geometry","Service returned a feature without geometry",t),null;const{originPoint:f,originVector:i}=R(t,r,n),c=w.fromJSON(t.geometry);c.spatialReference=r;const m=b(t.attributes,n),u=a.projectVertices?new F({origin:i}):new I({origin:i}),l=$(a);return l?E.createWithExternalSource(f,l,{extent:c,transform:m,vertexSpace:u}):E.createIncomplete(f,{extent:c,transform:m,vertexSpace:u})}function R({attributes:t},e,{transformFieldRoles:r}){const n=t[r.originX],o=t[r.originY],s=t[r.originZ];return{originPoint:new M({x:n,y:o,z:s,spatialReference:e}),originVector:N(n,o,s)}}function b(t,{transformFieldRoles:e}){return new P({translation:[t[e.translationX],-t[e.translationZ],t[e.translationY]],rotationAxis:[t[e.rotationX],t[e.rotationZ],t[e.rotationY]],rotationAngle:t[e.rotationDeg],scale:[t[e.scaleX],t[e.scaleY],t[e.scaleZ]]})}var p;function v(t,e){const r=new Map;for(const n of e){const o=n.parentGlobalId;if(o==null)continue;const s=n.assetName,a=n.assetType,f=n.assetHash,i=n.assetURL,c=n.conversionStatus,m=n.seqNo,u=T(a,t.supportedFormats);if(!u){g().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${a}, but it does not list it as a supported type`);continue}const l=h(r,o,()=>({projectVertices:V(n.flags).projectVertices,files:new Map}));h(l.files,s,()=>({name:s,type:a,mimeType:u,status:C(c),parts:[]})).parts[m]={hash:f,url:i}}return r}function $(t){const e=Array.from(t.files.values()),r=new Array;for(const n of e){if(n.status!==p.COMPLETED)return null;const o=new Array;for(const s of n.parts){if(!s)return null;o.push(new O(s.url,s.hash))}r.push(new x(n.name,n.mimeType,o))}return r}function C(t){switch(t){case"COMPLETED":case"SUBMITTED":return p.COMPLETED;case"INPROGRESS":return p.PENDING;default:return p.FAILED}}function V(t){return{projectVertices:t.includes("PROJECT_VERTICES")}}(function(t){t[t.FAILED=0]="FAILED",t[t.PENDING=1]="PENDING",t[t.COMPLETED=2]="COMPLETED"})(p||(p={}));export{v as assetMapFromAssetMapsJSON,L as extractMesh,at as meshFeatureSetFromJSON};
