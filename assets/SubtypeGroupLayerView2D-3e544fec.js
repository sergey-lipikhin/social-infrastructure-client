import{u as m,w as d,l as u,x as y,M as h,b6 as b}from"./index-a6c97245.js";import c from"./FeatureLayerView2D-1f9f564a.js";import"./EffectView-b76003f0.js";import"./definitions-93bd9194.js";import"./LayerView2D-66195bd8.js";import"./Container-d687363b.js";import"./enums-b14466b3.js";import"./Texture-31c4f382.js";import"./AttributeStoreView-a75a8afe.js";import"./TiledDisplayObject-962ea01b.js";import"./color-070b46a1.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./WGLContainer-0259ebc3.js";import"./VertexArrayObject-d7a3254f.js";import"./vec4f32-0d1b2306.js";import"./ProgramTemplate-bb165b15.js";import"./GeometryUtils-19fdb7c0.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-15ea0d28.js";import"./visualVariablesUtils-78808dfe.js";import"./cimAnalyzer-bcf3cdca.js";import"./fontUtils-543e6eef.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-65793346.js";import"./quantizationUtils-13d96edf.js";import"./floatRGBA-f2fcae6c.js";import"./ExpandedCIM-87f47b3e.js";import"./util-7b977ae4.js";import"./BitmapTileContainer-12b86e36.js";import"./Bitmap-72184be9.js";import"./TileContainer-88c4ebf1.js";import"./CircularArray-ef508845.js";import"./BufferPool-17520c3d.js";import"./FeatureContainer-bace7d73.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-5032feb3.js";import"./LayerView-68cbc071.js";import"./RefreshableLayerView-0ede27ef.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let n=class extends c{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var a;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((a=this.tileRenderer)==null?void 0:a.updating),p=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${p}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),p}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new b().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};n=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],n);const ae=n;export{ae as default};
