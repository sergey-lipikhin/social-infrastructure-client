import{u as m,w as d,l as u,x as y,M as h,b6 as b}from"./index-fdfa590d.js";import c from"./FeatureLayerView2D-faad0ecb.js";import"./EffectView-88fc1232.js";import"./definitions-b77f917a.js";import"./LayerView2D-b1809504.js";import"./Container-c5aca323.js";import"./enums-b14466b3.js";import"./Texture-49e8f2d7.js";import"./AttributeStoreView-e6e43d4a.js";import"./TiledDisplayObject-bf2313fd.js";import"./color-40238c06.js";import"./enums-f1a6a48a.js";import"./VertexElementDescriptor-2925c6af.js";import"./number-e491b09e.js";import"./WGLContainer-777ff42e.js";import"./VertexArrayObject-e943c837.js";import"./vec4f32-0d1b2306.js";import"./ProgramTemplate-acf57c6e.js";import"./GeometryUtils-a6bf4843.js";import"./alignmentUtils-ae955d28.js";import"./StyleDefinition-29c49b98.js";import"./config-1337d16e.js";import"./earcut-6c3a7c54.js";import"./visualVariablesUtils-c057ebbd.js";import"./cimAnalyzer-513e6c62.js";import"./fontUtils-bfde2177.js";import"./BidiEngine-9a40f2f4.js";import"./GeometryUtils-984e8446.js";import"./Rect-ea14f53a.js";import"./callExpressionWithFeature-21189de1.js";import"./quantizationUtils-1cbccb3f.js";import"./floatRGBA-4b494040.js";import"./ExpandedCIM-49489b60.js";import"./util-1d45df17.js";import"./BitmapTileContainer-37c27a0a.js";import"./Bitmap-2f80cf44.js";import"./TileContainer-58dd9f78.js";import"./CircularArray-ef508845.js";import"./BufferPool-71d7a14e.js";import"./FeatureContainer-8ffad194.js";import"./floorFilterUtils-080a7cd2.js";import"./popupUtils-7d573183.js";import"./LayerView-2d6bbbeb.js";import"./RefreshableLayerView-0f81c99a.js";function g(i,e){return!i.visible||i.minScale!==0&&e>i.minScale||i.maxScale!==0&&e<i.maxScale}let n=class extends c{initialize(){this.addHandles([u(()=>this.view.scale,()=>this._update(),y)],"constructor")}isUpdating(){var a;const i=this.layer.sublayers.some(l=>l.renderer!=null),e=this._commandsQueue.updating,s=this._updatingRequiredFieldsPromise!=null,t=!this._proxy||!this._proxy.isReady,r=this._pipelineIsUpdating,o=this.tileRenderer==null||((a=this.tileRenderer)==null?void 0:a.updating),p=i&&(e||s||t||r||o);return h("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${p}
  -> hasRenderer ${i}
  -> hasPendingCommand ${e}
  -> updatingRequiredFields ${s}
  -> updatingProxy ${t}
  -> updatingPipeline ${r}
  -> updatingTileRenderer ${o}
`),p}_injectOverrides(i){let e=super._injectOverrides(i);const s=this.view.scale,t=this.layer.sublayers.filter(o=>g(o,s)).map(o=>o.subtypeCode);if(!t.length)return e;e=e??new b().toJSON();const r=`NOT ${this.layer.subtypeField} IN (${t.join(",")})`;return e.where=e.where?`(${e.where}) AND (${r})`:r,e}_setLayersForFeature(i){const e=this.layer.fieldsIndex.get(this.layer.subtypeField),s=i.attributes[e.name],t=this.layer.sublayers.find(r=>r.subtypeCode===s);i.layer=i.sourceLayer=t}_createSchemaConfig(){const i={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers).map(r=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible,renderer:r.renderer,subtypeCode:r.subtypeCode,orderBy:null}))},e=this.layer.sublayers.map(r=>r.subtypeCode).join(","),s=this.layer.sublayers.length?`${this.layer.subtypeField} IN (${e})`:"1=2";let t=this.layer.definitionExpression?this.layer.definitionExpression+" AND ":"";return t+=s,{...super._createSchemaConfig(),...i,definitionExpression:t}}};n=m([d("esri.views.2d.layers.SubtypeGroupLayerView2D")],n);const ae=n;export{ae as default};
