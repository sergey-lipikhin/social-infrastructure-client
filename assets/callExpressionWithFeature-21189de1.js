import{s as i,ae as l}from"./index-fdfa590d.js";import{U as m,v as p,q as y,k as d}from"./quantizationUtils-1cbccb3f.js";function h(n,r,e,a,t){if(n==null)return null;const o=n.referencesGeometry()&&t?f(r,a,t):r,s=n.repurposeFeature(o);try{return n.evaluate({...e,$feature:s},n.services)}catch(c){return i.getLogger("esri.views.2d.support.arcadeOnDemand").warn("Feature arcade evaluation failed:",c),null}}const u=new Map;function f(n,r,e){const{transform:a,hasZ:t,hasM:o}=e;u.has(r)||u.set(r,g(r));const s=u.get(r)(n.geometry,a,t,o);return{...n,geometry:s}}function g(n){const r={};switch(n){case"esriGeometryPoint":return(e,a,t,o)=>d(a,r,e,t,o);case"esriGeometryPolygon":return(e,a,t,o)=>y(a,r,e,t,o);case"esriGeometryPolyline":return(e,a,t,o)=>p(a,r,e,t,o);case"esriGeometryMultipoint":return(e,a,t,o)=>m(a,r,e,t,o);default:return i.getLogger("esri.views.2d.support.arcadeOnDemand").error(new l("mapview-arcade",`Unable to handle geometryType: ${n}`)),e=>e}}export{h as s};
