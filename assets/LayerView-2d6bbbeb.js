import{aF as n,aG as l,aH as d,aI as o,a9 as p,s as u,u as s,v as r,w as y}from"./index-fdfa590d.js";let t=class extends n(l(d(o.EventedMixin(p)))){constructor(e){super(e),this.layer=null,this.parent=null}initialize(){this.when().catch(e=>{if(e.name!=="layerview:create-error"){const i=this.layer&&this.layer.id||"no id",a=this.layer&&this.layer.title||"no title";u.getLogger(this).error("#resolve()",`Failed to resolve layer view (layer title: '${a}', id: '${i}')`,e)}})}get fullOpacity(){var e,i;return(((e=this.layer)==null?void 0:e.opacity)??1)*(((i=this.parent)==null?void 0:i.fullOpacity)??1)}get suspended(){return!this.canResume()}get suspendInfo(){return this.getSuspendInfo()}get legendEnabled(){var e;return!this.suspended&&((e=this.layer)==null?void 0:e.legendEnabled)===!0}get updating(){var e;return!(!((e=this.updatingHandles)!=null&&e.updating)&&!this.isUpdating())}get updatingProgress(){return this.updating?0:1}get visible(){var e;return((e=this.layer)==null?void 0:e.visible)===!0}set visible(e){this._overrideIfSome("visible",e)}canResume(){var e,i,a;return this.visible&&((e=this.layer)==null?void 0:e.loaded)&&!((i=this.parent)!=null&&i.suspended)&&((a=this.view)==null?void 0:a.ready)||!1}getSuspendInfo(){const e=this.parent&&this.parent.suspended?this.parent.suspendInfo:{},i=this;return i.view&&i.view.ready||(e.viewNotReady=!0),this.layer&&this.layer.loaded||(e.layerNotLoaded=!0),this.visible||(e.layerInvisible=!0),e}isUpdating(){return!1}};s([r()],t.prototype,"fullOpacity",null),s([r()],t.prototype,"layer",void 0),s([r()],t.prototype,"parent",void 0),s([r({readOnly:!0})],t.prototype,"suspended",null),s([r({readOnly:!0})],t.prototype,"suspendInfo",null),s([r({readOnly:!0})],t.prototype,"legendEnabled",null),s([r({type:Boolean,readOnly:!0})],t.prototype,"updating",null),s([r({readOnly:!0})],t.prototype,"updatingProgress",null),s([r()],t.prototype,"visible",null),s([r()],t.prototype,"view",void 0),t=s([y("esri.views.layers.LayerView")],t);const g=t;export{g as d};
